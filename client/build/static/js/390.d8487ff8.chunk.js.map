{"version":3,"file":"static/js/390.d8487ff8.chunk.js","mappings":"iKACA,QAAkC,yCAAlC,EAAqG,iDAArG,EAA6K,8C,wBCA7K,QAAsC,iDAAtC,EAAkG,sCAAlG,EAAqK,wD,uBCKrK,MAkBA,EAlB4BA,IAAa,IAAZ,KAACC,GAAKD,EAEjC,OACEE,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CACHC,UAAWC,EACX,cAAY,sBACZC,GAAIL,EAAKM,OAAM,gBAAAC,OAAmBP,EAAKM,QAAM,gBAAAC,OAAoBP,EAAKQ,KAAMC,SAAA,EAE5EC,EAAAA,EAAAA,KAAA,WAASP,UAAWC,EAAgBK,UAClCC,EAAAA,EAAAA,KAAA,OAAKC,IAAG,GAAAJ,OARMK,8BAQUL,OAAGP,EAAKa,OAASC,MAAM,MAAMC,OAAO,MAAMC,QAAQ,OAAOC,IAAI,4BAEvFP,EAAAA,EAAAA,KAAA,KAAGP,UAAWC,EAAkCK,SAAET,EAAKkB,SAClD,ECoBX,EAjCwBC,KACtB,MAAMC,GAAsBC,EAAAA,EAAAA,IAAYC,EAAAA,IAClCC,GAAaF,EAAAA,EAAAA,IAAYG,EAAAA,IAW/B,OACEvB,EAAAA,EAAAA,MAAA,WAASE,UAAWC,EAAwB,cAAY,kBAAiBK,SAAA,EACvEC,EAAAA,EAAAA,KAAA,MAAIP,UAAWC,EAA+BK,SAAC,gBAG/CC,EAAAA,EAAAA,KAAA,OAAKP,UAAWC,EAA4BK,UACxCW,GAAuBG,IACnBtB,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAhB,SAAA,EACEC,EAAAA,EAAAA,KAACgB,EAAmB,CAAC1B,KAbd,CACnBkB,KAAM,OACNZ,OAAQ,OACRO,MAAO,wCAWKH,EAAAA,EAAAA,KAACgB,EAAmB,CAAC1B,KAnBf,CAClBkB,KAAM,MACNZ,OAAQ,MACRO,MAAO,uCAiBKH,EAAAA,EAAAA,KAACgB,EAAmB,CAAC1B,KAAMuB,EAAW,MACtCb,EAAAA,EAAAA,KAACgB,EAAmB,CAAC1B,KAAMuB,EAAW,MACtCb,EAAAA,EAAAA,KAACgB,EAAmB,CAAC1B,KAAMuB,EAAW,MACtCb,EAAAA,EAAAA,KAACgB,EAAmB,CAAC1B,KAAMuB,EAAW,YAGxC,C","sources":["webpack://pet-project-frontend/./src/pages/mainPage/CategoriesBlock/CategoriesBlock.module.scss?2f7e","webpack://pet-project-frontend/./src/components/CategoryPreviewCard/CategoryPreviewCard.module.scss?217c","components/CategoryPreviewCard/CategoryPreviewCard.jsx","pages/mainPage/CategoriesBlock/CategoriesBlock.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"categoriesBlock\":\"CategoriesBlock_categoriesBlock__VQxRw\",\"categoriesBlock__title2\":\"CategoriesBlock_categoriesBlock__title2__1f+YP\",\"categoriesBlock__box\":\"CategoriesBlock_categoriesBlock__box__npkqD\"};","// extracted by mini-css-extract-plugin\nexport default {\"categoryPreviewCard\":\"CategoryPreviewCard_categoryPreviewCard__L1mH7\",\"imageBox\":\"CategoryPreviewCard_imageBox__EVnW4\",\"categoryPreviewCard__title\":\"CategoryPreviewCard_categoryPreviewCard__title__fMDcS\"};","import React from 'react';\nimport styles from './CategoryPreviewCard.module.scss';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\n\nconst CategoryPreviewCard = ({item}) => {\n  const apiEndpoint = process.env.REACT_APP_API_ENDPOINT;\n  return (\n    <Link\n      className={styles.categoryPreviewCard}\n      data-testid=\"CategoryPreviewCard\"\n      to={item.status ? `/shop?status=${item.status}`: `/shop?status=${item._id}`}\n    >\n      <picture className={styles.imageBox}>\n        <img src={`${apiEndpoint}${item.image}`} width='193' height='140' loading='lazy' alt=\"category cover image\"/>\n      </picture>\n      <p className={styles.categoryPreviewCard__title}>{item.name}</p>\n    </Link>\n  );\n};\nCategoryPreviewCard.propTypes = {\n  item: PropTypes.object,\n};\nexport default CategoryPreviewCard;\n","import React from 'react';\nimport styles from './CategoriesBlock.module.scss';\nimport {useSelector} from 'react-redux';\nimport {getCategories, getCategoriesLoadingStatus} from '../../../store/categorySlice';\nimport CategoryPreviewCard from '../../../components/CategoryPreviewCard/CategoryPreviewCard';\nconst CategoriesBlock = () => {\n  const isCategoriesLoading = useSelector(getCategoriesLoadingStatus);\n  const categories = useSelector(getCategories);\n  const categoryNew = {\n    name: 'new',\n    status: 'new',\n    image: 'uploads/Desktop/categoryNew.webp',\n  };\n  const categorySale = {\n    name: 'sale',\n    status: 'sale',\n    image: 'uploads/Desktop/categorySale.webp',\n  };\n  return (\n    <article className={styles.categoriesBlock} data-testid=\"CategoriesBlock\">\n      <h2 className={styles.categoriesBlock__title2}>\n          categories\n      </h2>\n      <nav className={styles.categoriesBlock__box}>\n        {!isCategoriesLoading && categories &&\n              <>\n                <CategoryPreviewCard item={categorySale}/>\n                <CategoryPreviewCard item={categoryNew}/>\n                <CategoryPreviewCard item={categories[3]}/>\n                <CategoryPreviewCard item={categories[1]}/>\n                <CategoryPreviewCard item={categories[0]}/>\n                <CategoryPreviewCard item={categories[2]}/>\n              </>}\n      </nav>\n    </article>\n  );\n};\n\nexport default CategoriesBlock;\n"],"names":["_ref","item","_jsxs","Link","className","styles","to","status","concat","_id","children","_jsx","src","process","image","width","height","loading","alt","name","CategoriesBlock","isCategoriesLoading","useSelector","getCategoriesLoadingStatus","categories","getCategories","_Fragment","CategoryPreviewCard"],"sourceRoot":""}