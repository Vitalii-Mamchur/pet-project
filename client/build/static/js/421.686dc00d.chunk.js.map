{"version":3,"file":"static/js/421.686dc00d.chunk.js","mappings":"sKACA,QAAoC,6CAApC,EAAiH,yDAAjH,EAAkN,iEAAlN,EAA6T,mEAA7T,EAA0Z,mDAA1Z,EAAye,qD,mFCSze,MAoFA,EApF0BA,KACxB,MAAMC,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QAChDC,EAAQL,EAAUM,IAAI,SACtBC,EAAQP,EAAUM,IAAI,SACtBE,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAWF,EAAAA,EAAAA,IAAYG,EAAAA,KACtBC,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,GACzCC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,SAAU,GACVC,gBAAiB,IAEnBC,iBAAkBC,EAAAA,GAClBC,SAAWC,IACTlB,GAASmB,EAAAA,EAAAA,IAAmB,CAACtB,QAAOE,QAAOmB,YAC3CR,EAAOU,WAAW,IAatB,OAVAC,EAAAA,EAAAA,YAAU,KACRrB,GAASsB,EAAAA,EAAAA,MAAoB,GAC5B,KACHD,EAAAA,EAAAA,YAAU,KAENb,IADEN,EAIJ,GACC,CAACA,KAEFqB,EAAAA,EAAAA,MAAA,WAASC,UAAWC,EAA0B,cAAY,oBAAmBC,SAAA,EAC3EH,EAAAA,EAAAA,MAAA,WACEC,UAAWC,EAAqCC,SAAA,EAEhDC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oBACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oCAEJrB,GACCsB,EAAAA,EAAAA,KAAA,WAASH,UAA8B,MAAlBnB,EAASuB,KAAgBH,EAA+CA,EAA+CC,UAC1IC,EAAAA,EAAAA,KAAA,KAAAD,SAAIG,EAAAA,EAAsBxB,EAASyB,aACxB,MACfP,EAAAA,EAAAA,MAAA,QACEC,UAAWC,EACXR,SAAUP,EAAOqB,aAAaL,SAAA,EAE9BC,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CACRC,KAAK,WACLC,MAAM,WACNC,KAAK,WACLC,YAAY,aACZC,MAAO3B,EAAOQ,OAAOL,SACrByB,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,WACfC,MAAOhC,EAAOiC,OAAO9B,SACrB+B,QAASlC,EAAOkC,WAElBjB,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CACRC,KAAK,WACLC,MAAM,mBACNC,KAAK,kBACLC,YAAY,aACZC,MAAO3B,EAAOQ,OAAOJ,gBACrBwB,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,WACfC,MAAOhC,EAAOiC,OAAO7B,gBACrB8B,QAASlC,EAAOkC,WAElBjB,EAAAA,EAAAA,KAAA,UACEH,UAAWC,EACXQ,KAAK,SACLY,UAAWnC,EAAOoC,QAAQpB,SAExBnB,GACEoB,EAAAA,EAAAA,KAACoB,EAAAA,EAAe,KACpBpB,EAAAA,EAAAA,KAAA,QAAAD,SAAM,iBAMF,C","sources":["webpack://pet-project-frontend/./src/pages/loginLayoutPage/recoveryPasswordPage/ResetPasswordPage/ResetPasswordForm.module.scss?d56c","pages/loginLayoutPage/recoveryPasswordPage/ResetPasswordPage/ResetPasswordForm.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"resetPasswordForm\":\"ResetPasswordForm_resetPasswordForm__xw+V4\",\"resetPasswordForm__titleBlock\":\"ResetPasswordForm_resetPasswordForm__titleBlock__tyJ96\",\"resetPasswordForm__errorMessagesBlock\":\"ResetPasswordForm_resetPasswordForm__errorMessagesBlock__kPwiW\",\"resetPasswordForm__successMessagesBlock\":\"ResetPasswordForm_resetPasswordForm__successMessagesBlock__hdqzl\",\"resetPasswordForm__form\":\"ResetPasswordForm_resetPasswordForm__form__3uiqt\",\"resetPasswordForm__button\":\"ResetPasswordForm_resetPasswordForm__button__e3oZv\"};","import React, {useEffect, useState} from 'react';\nimport styles from './ResetPasswordForm.module.scss';\nimport TextField from '../../../../components/form/formFields/TextField/TextField';\nimport {useFormik} from 'formik';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {userClearResponse, getResponse, getUserLoadingStatus, setNewUserPassword} from '../../../../store/userSlice';\nimport transformErrorMessage from '../../../../utils/generateErrorMessage';\nimport LoaderIconSmall from '../../../../components/svg/loaderIcons/LoaderSmallIcon/LoaderIconSmall';\nimport {validationSchemaPasswords} from '../../../../utils/validationSchema';\n\nconst ResetPasswordForm = () => {\n  const urlParams = new URLSearchParams(window.location.search);\n  const token = urlParams.get('token');\n  const email = urlParams.get('email');\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getUserLoadingStatus);\n  const response = useSelector(getResponse);\n  const [isLoaderRun, setIsLoaderRun] = useState(false);\n  const formik = useFormik({\n    initialValues: {\n      password: '',\n      confirmPassword: '',\n    },\n    validationSchema: validationSchemaPasswords,\n    onSubmit: (values) => {\n      dispatch(setNewUserPassword({token, email, values}));\n      formik.resetForm();\n    },\n  });\n  useEffect(() => {\n    dispatch(userClearResponse());\n  }, []);\n  useEffect(() => {\n    if (isLoading) {\n      setIsLoaderRun(true);\n    } else {\n      setIsLoaderRun(false);\n    }\n  }, [isLoading]);\n  return (\n    <article className={styles.resetPasswordForm} data-testid=\"ResetPasswordForm\">\n      <section\n        className={styles.resetPasswordForm__titleBlock}\n      >\n        <p>Reset password</p>\n        <p>Please enter a new password:</p>\n      </section>\n      {response ?\n        <section className={(response.code !== 200) ? styles.resetPasswordForm__errorMessagesBlock : styles.resetPasswordForm__successMessagesBlock}>\n          <p>{transformErrorMessage[response.message]}</p>\n        </section> : null}\n      <form\n        className={styles.resetPasswordForm__form}\n        onSubmit={formik.handleSubmit}\n      >\n        <TextField\n          type='password'\n          label='Password'\n          name='password'\n          placeholder='**********'\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.errors.password}\n          touched={formik.touched}\n        />\n        <TextField\n          type='password'\n          label='Confirm password'\n          name='confirmPassword'\n          placeholder='**********'\n          value={formik.values.confirmPassword}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.errors.confirmPassword}\n          touched={formik.touched}\n        />\n        <button\n          className={styles.resetPasswordForm__button}\n          type=\"submit\"\n          disabled={!formik.isValid}>\n          {\n            isLoaderRun ?\n              <LoaderIconSmall/> :\n          <span>\n            Reset\n          </span>\n          }\n        </button>\n      </form>\n    </article>\n  );\n};\n\nexport default ResetPasswordForm;\n"],"names":["ResetPasswordForm","urlParams","URLSearchParams","window","location","search","token","get","email","dispatch","useDispatch","isLoading","useSelector","getUserLoadingStatus","response","getResponse","isLoaderRun","setIsLoaderRun","useState","formik","useFormik","initialValues","password","confirmPassword","validationSchema","validationSchemaPasswords","onSubmit","values","setNewUserPassword","resetForm","useEffect","userClearResponse","_jsxs","className","styles","children","_jsx","code","transformErrorMessage","message","handleSubmit","TextField","type","label","name","placeholder","value","onChange","handleChange","onBlur","handleBlur","error","errors","touched","disabled","isValid","LoaderIconSmall"],"sourceRoot":""}