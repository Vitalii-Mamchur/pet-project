{"version":3,"file":"static/js/818.af2c95cc.chunk.js","mappings":"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","sources":["../node_modules/react-fast-marquee/src/components/Marquee.tsx"],"sourcesContent":["import React, {\n  Fragment,\n  useEffect,\n  useState,\n  useRef,\n  useCallback,\n  useMemo,\n  ReactNode,\n  CSSProperties,\n  FC,\n  forwardRef,\n  Children,\n  MutableRefObject,\n  RefAttributes,\n} from \"react\";\nimport \"./Marquee.scss\";\n\ntype MarqueeProps = {\n  /**\n   * @description Inline style for the container div\n   * @type {CSSProperties}\n   * @default {}\n   */\n  style?: CSSProperties;\n  /**\n   * @description Class name to style the container div\n   * @type {string}\n   * @default \"\"\n   */\n  className?: string;\n  /**\n   * @description Whether to automatically fill blank space in the marquee with copies of the children or not\n   * @type {boolean}\n   * @default false\n   */\n  autoFill?: boolean;\n  /**\n   * @description Whether to play or pause the marquee\n   * @type {boolean}\n   * @default true\n   */\n  play?: boolean;\n  /**\n   * @description Whether to pause the marquee when hovered\n   * @type {boolean}\n   * @default false\n   */\n  pauseOnHover?: boolean;\n  /**\n   * @description Whether to pause the marquee when clicked\n   * @type {boolean}\n   * @default false\n   */\n  pauseOnClick?: boolean;\n  /**\n   * @description The direction the marquee is sliding\n   * @type {\"left\" | \"right\" | \"up\" | \"down\"}\n   * @default \"left\"\n   */\n  direction?: \"left\" | \"right\" | \"up\" | \"down\";\n  /**\n   * @description Speed calculated as pixels/second\n   * @type {number}\n   * @default 50\n   */\n  speed?: number;\n  /**\n   * @description Duration to delay the animation after render, in seconds\n   * @type {number}\n   * @default 0\n   */\n  delay?: number;\n  /**\n   * @description The number of times the marquee should loop, 0 is equivalent to infinite\n   * @type {number}\n   * @default 0\n   */\n  loop?: number;\n  /**\n   * @description Whether to show the gradient or not\n   * @type {boolean}\n   * @default false\n   */\n  gradient?: boolean;\n  /**\n   * @description The color of the gradient\n   * @type {string}\n   * @default \"white\"\n   */\n  gradientColor?: string;\n  /**\n   * @description The width of the gradient on either side\n   * @type {number | string}\n   * @default 200\n   */\n  gradientWidth?: number | string;\n  /**\n   * @description A callback for when the marquee finishes scrolling and stops. Only calls if loop is non-zero.\n   * @type {() => void}\n   * @default null\n   */\n  onFinish?: () => void;\n  /**\n   * @description A callback for when the marquee finishes a loop. Does not call if maximum loops are reached (use onFinish instead).\n   * @type {() => void}\n   * @default null\n   */\n  onCycleComplete?: () => void;\n  /**\n   * @description: A callback function that is invoked once the marquee has finished mounting. It can be utilized to recalculate the page size, if necessary.\n   * @type {() => void}\n   * @default null\n   */\n  onMount?: () => void;\n  /**\n   * @description The children rendered inside the marquee\n   * @type {ReactNode}\n   * @default null\n   */\n  children?: ReactNode;\n} & RefAttributes<HTMLDivElement>;\n\nconst Marquee: FC<MarqueeProps> = forwardRef(function Marquee(\n  {\n    style = {},\n    className = \"\",\n    autoFill = false,\n    play = true,\n    pauseOnHover = false,\n    pauseOnClick = false,\n    direction = \"left\",\n    speed = 50,\n    delay = 0,\n    loop = 0,\n    gradient = false,\n    gradientColor = \"white\",\n    gradientWidth = 200,\n    onFinish,\n    onCycleComplete,\n    onMount,\n    children,\n  },\n  ref\n) {\n  // React Hooks\n  const [containerWidth, setContainerWidth] = useState(0);\n  const [marqueeWidth, setMarqueeWidth] = useState(0);\n  const [multiplier, setMultiplier] = useState(1);\n  const [isMounted, setIsMounted] = useState(false);\n  const rootRef = useRef<HTMLDivElement>(null);\n  const containerRef = (ref as MutableRefObject<HTMLDivElement>) || rootRef;\n  const marqueeRef = useRef<HTMLDivElement>(null);\n\n  // Calculate width of container and marquee and set multiplier\n  const calculateWidth = useCallback(() => {\n    if (marqueeRef.current && containerRef.current) {\n      const containerRect = containerRef.current.getBoundingClientRect();\n      const marqueeRect = marqueeRef.current.getBoundingClientRect();\n      let containerWidth = containerRect.width;\n      let marqueeWidth = marqueeRect.width;\n\n      // Swap width and height if direction is up or down\n      if (direction === \"up\" || direction === \"down\") {\n        containerWidth = containerRect.height;\n        marqueeWidth = marqueeRect.height;\n      }\n\n      if (autoFill && containerWidth && marqueeWidth) {\n        setMultiplier(\n          marqueeWidth < containerWidth\n            ? Math.ceil(containerWidth / marqueeWidth)\n            : 1\n        );\n      } else {\n        setMultiplier(1);\n      }\n\n      setContainerWidth(containerWidth);\n      setMarqueeWidth(marqueeWidth);\n    }\n  }, [autoFill, containerRef, direction]);\n\n  // Calculate width and multiplier on mount and on window resize\n  useEffect(() => {\n    if (!isMounted) return;\n\n    calculateWidth();\n    if (marqueeRef.current && containerRef.current) {\n      const resizeObserver = new ResizeObserver(() => calculateWidth());\n      resizeObserver.observe(containerRef.current);\n      resizeObserver.observe(marqueeRef.current);\n      return () => {\n        if (!resizeObserver) return;\n        resizeObserver.disconnect();\n      };\n    }\n  }, [calculateWidth, containerRef, isMounted]);\n\n  // Recalculate width when children change\n  useEffect(() => {\n    calculateWidth();\n  }, [calculateWidth, children]);\n\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  // Runs the onMount callback, if it is a function, when Marquee is mounted.\n  useEffect(() => {\n    if (typeof onMount === \"function\") {\n      onMount();\n    }\n  }, []);\n\n  // Animation duration\n  const duration = useMemo(() => {\n    if (autoFill) {\n      return (marqueeWidth * multiplier) / speed;\n    } else {\n      return marqueeWidth < containerWidth\n        ? containerWidth / speed\n        : marqueeWidth / speed;\n    }\n  }, [autoFill, containerWidth, marqueeWidth, multiplier, speed]);\n\n  const containerStyle = useMemo(\n    () => ({\n      ...style,\n      [\"--pause-on-hover\" as string]:\n        !play || pauseOnHover ? \"paused\" : \"running\",\n      [\"--pause-on-click\" as string]:\n        !play || (pauseOnHover && !pauseOnClick) || pauseOnClick\n          ? \"paused\"\n          : \"running\",\n      [\"--width\" as string]:\n        direction === \"up\" || direction === \"down\" ? `100vh` : \"100%\",\n      [\"--transform\" as string]:\n        direction === \"up\"\n          ? \"rotate(-90deg)\"\n          : direction === \"down\"\n          ? \"rotate(90deg)\"\n          : \"none\",\n    }),\n    [style, play, pauseOnHover, pauseOnClick, direction]\n  );\n\n  const gradientStyle = useMemo(\n    () => ({\n      [\"--gradient-color\" as string]: gradientColor,\n      [\"--gradient-width\" as string]:\n        typeof gradientWidth === \"number\"\n          ? `${gradientWidth}px`\n          : gradientWidth,\n    }),\n    [gradientColor, gradientWidth]\n  );\n\n  const marqueeStyle = useMemo(\n    () => ({\n      [\"--play\" as string]: play ? \"running\" : \"paused\",\n      [\"--direction\" as string]: direction === \"left\" ? \"normal\" : \"reverse\",\n      [\"--duration\" as string]: `${duration}s`,\n      [\"--delay\" as string]: `${delay}s`,\n      [\"--iteration-count\" as string]: !!loop ? `${loop}` : \"infinite\",\n      [\"--min-width\" as string]: autoFill ? `auto` : \"100%\",\n    }),\n    [play, direction, duration, delay, loop, autoFill]\n  );\n\n  const childStyle = useMemo(\n    () => ({\n      [\"--transform\" as string]:\n        direction === \"up\"\n          ? \"rotate(90deg)\"\n          : direction === \"down\"\n          ? \"rotate(-90deg)\"\n          : \"none\",\n    }),\n    [direction]\n  );\n\n  // Render {multiplier} number of children\n  const multiplyChildren = useCallback(\n    (multiplier: number) => {\n      return [\n        ...Array(\n          Number.isFinite(multiplier) && multiplier >= 0 ? multiplier : 0\n        ),\n      ].map((_, i) => (\n        <Fragment key={i}>\n          {Children.map(children, (child) => {\n            return (\n              <div style={childStyle} className=\"rfm-child\">\n                {child}\n              </div>\n            );\n          })}\n        </Fragment>\n      ));\n    },\n    [childStyle, children]\n  );\n\n  return !isMounted ? null : (\n    <div\n      ref={containerRef}\n      style={containerStyle}\n      className={\"rfm-marquee-container \" + className}\n    >\n      {gradient && <div style={gradientStyle} className=\"rfm-overlay\" />}\n      <div\n        className=\"rfm-marquee\"\n        style={marqueeStyle}\n        onAnimationIteration={onCycleComplete}\n        onAnimationEnd={onFinish}\n      >\n        <div className=\"rfm-initial-child-container\" ref={marqueeRef}>\n          {Children.map(children, (child) => {\n            return (\n              <div style={childStyle} className=\"rfm-child\">\n                {child}\n              </div>\n            );\n          })}\n        </div>\n        {multiplyChildren(multiplier - 1)}\n      </div>\n      <div className=\"rfm-marquee\" style={marqueeStyle}>\n        {multiplyChildren(multiplier)}\n      </div>\n    </div>\n  );\n});\n\nexport default Marquee;\n"],"names":["Marquee","React","forwardRef","_ref","ref","style","className","autoFill","play","pauseOnHover","pauseOnClick","direction","speed","delay","loop","gradient","gradientColor","gradientWidth","onFinish","onCycleComplete","onMount","children","containerWidth","setContainerWidth","useState","marqueeWidth","setMarqueeWidth","multiplier","setMultiplier","isMounted","setIsMounted","rootRef","useRef","containerRef","marqueeRef","calculateWidth","useCallback","current","containerRect","getBoundingClientRect","marqueeRect","width","height","Math","ceil","useEffect","resizeObserver","ResizeObserver","observe","disconnect","duration","useMemo","containerStyle","Object","assign","gradientStyle","concat","marqueeStyle","childStyle","multiplyChildren","Array","Number","isFinite","map","_","i","React__default","createElement","Fragment","key","Children","child","onAnimationIteration","onAnimationEnd"],"sourceRoot":""}