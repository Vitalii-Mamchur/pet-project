{"version":3,"file":"static/js/967.9c62db23.chunk.js","mappings":"uKACA,SAAgB,mBAAqB,iDAAiD,+BAAiC,6DAA6D,yCAA2C,uEAAuE,uCAAyC,qEAAqE,yBAA2B,uDAAuD,2BAA6B,yDAAyD,iCAAmC,gE,6FCc/lB,MAsGA,EAtG6BA,KAC3B,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAWF,EAAAA,EAAAA,IAAYG,EAAAA,IACvBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,KACnBC,EAASC,IAAcC,EAAAA,EAAAA,aACvBC,EAAaC,IAAkBF,EAAAA,EAAAA,WAAS,GACzCG,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,IAETC,iBAAkBC,EAAAA,GAClBC,SAAWC,IACJP,EAAOQ,UACZtB,GAASuB,EAAAA,EAAAA,IAAqB,CAACC,QAASH,KACxCP,EAAOW,cAAc,QAAS,IAC9BX,EAAOY,gBAAgB,SAAS,GAAM,IA8B1C,OA3BAC,EAAAA,EAAAA,YAAU,KACJtB,GACFK,EAAWL,GAETE,GACFG,EAAWH,EACb,GACC,CAACA,EAAOF,KACXsB,EAAAA,EAAAA,YAAU,KAENd,IADEX,EAIJ,GACC,CAACA,KACJyB,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAoBA,KACpBnB,IACFC,EAAW,MACXV,GAAS6B,EAAAA,EAAAA,OACX,EAGF,OADAC,OAAOC,iBAAiB,QAASH,GAC1B,KACLE,OAAOE,oBAAoB,QAASJ,EAAkB,CACvD,GACA,CAACnB,KAEFwB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOC,mBAAoB,cAAY,uBAAsBC,SAAA,EAC3EJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOG,+BAA+BD,SAAA,EACpDE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,sBAGHE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,yCAIJ5B,GACC8B,EAAAA,EAAAA,KAAA,OAAKL,UAA6B,MAAjBzB,EAAQ+B,KAAgBL,EAAOM,uCAAyCN,EAAOO,yCAAyCL,UACvIE,EAAAA,EAAAA,KAAA,KAAAF,SAAIM,EAAAA,EAAsBlC,EAAQA,aAC3B,MACXwB,EAAAA,EAAAA,MAAA,QACEC,UAAWC,EAAOS,yBAClBxB,SAAUN,EAAO+B,aAAaR,SAAA,EAE9BE,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACRC,MAAM,QACNC,KAAK,QACLC,YAAa,iBACbC,MAAOpC,EAAOO,OAAOJ,MAAMkC,cAC3BC,SAAUtC,EAAOuC,aACjBC,OAAQxC,EAAOyC,WACfhD,MAAOO,EAAO0C,OAAOvC,MACrBwC,QAAS3C,EAAO2C,WAElBlB,EAAAA,EAAAA,KAAA,UACEL,UAAWC,EAAOuB,2BAClBC,KAAK,SACLC,UAAW9C,EAAOQ,UAAYR,EAAO+C,MAAMxB,SAE3CzB,GACE2B,EAAAA,EAAAA,KAACuB,EAAAA,EAAe,KAClBvB,EAAAA,EAAAA,KAAA,QAAAF,SAAM,kBAMVJ,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAO4B,iCAAiC1B,SAAA,CAAC,sCAErDE,EAAAA,EAAAA,KAACyB,EAAAA,GAAO,CACNC,GAAG,UACHC,MAAM,qBACN,aAAW,qBACXhC,UAAWC,EAAOgC,qCAAqC9B,UAEvDE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,2BAGN,C","sources":["webpack://pet-project-frontend/./src/pages/loginLayoutPage/recoveryPasswordPage/RecoveryPasswordForm.module.scss?be80","pages/loginLayoutPage/recoveryPasswordPage/RecoveryPasswordForm.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"forgotPasswordForm\":\"RecoveryPasswordForm_forgotPasswordForm__OK+Hw\",\"forgotPasswordForm__titleBlock\":\"RecoveryPasswordForm_forgotPasswordForm__titleBlock__aYsqD\",\"forgotPasswordForm__successMessagesBlock\":\"RecoveryPasswordForm_forgotPasswordForm__successMessagesBlock__oLbEE\",\"forgotPasswordForm__errorMessagesBlock\":\"RecoveryPasswordForm_forgotPasswordForm__errorMessagesBlock__WiVtY\",\"forgotPasswordForm__form\":\"RecoveryPasswordForm_forgotPasswordForm__form__-jY+x\",\"forgotPasswordForm__button\":\"RecoveryPasswordForm_forgotPasswordForm__button__lONas\",\"forgotPasswordForm__backToSignIn\":\"RecoveryPasswordForm_forgotPasswordForm__backToSignIn__kShp-\"};","import React, {useEffect, useState} from 'react';\nimport styles from './RecoveryPasswordForm.module.scss';\nimport TextField from '../../../components/form/formFields/TextField/TextField';\nimport {useFormik} from 'formik';\nimport {NavLink} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {\n  getError,\n  getResponse, getUserLoadingStatus,\n  recoveryUserPassword, userClearResponse,\n} from '../../../store/userSlice';\nimport transformErrorMessage from '../../../utils/generateErrorMessage';\nimport LoaderIconSmall from '../../../components/svg/loaderIcons/LoaderSmallIcon/LoaderIconSmall';\nimport {validationSchemaEmail} from '../../../utils/validationSchema';\n\nconst RecoveryPasswordForm = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getUserLoadingStatus);\n  const response = useSelector(getResponse);\n  const error = useSelector(getError);\n  const [message, setMessage] = useState();\n  const [isLoaderRun, setIsLoaderRun] = useState(false);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n    },\n    validationSchema: validationSchemaEmail,\n    onSubmit: (values) => {\n      if (!formik.isValid) return;\n      dispatch(recoveryUserPassword({payload: values}));\n      formik.setFieldValue('email', '');\n      formik.setFieldTouched('email', false);\n    },\n  });\n  useEffect(() => {\n    if (response) {\n      setMessage(response);\n    }\n    if (error) {\n      setMessage(error);\n    }\n  }, [error, response]);\n  useEffect(() => {\n    if (isLoading) {\n      setIsLoaderRun(true);\n    } else {\n      setIsLoaderRun(false);\n    }\n  }, [isLoading]);\n  useEffect(() => {\n    const clearErrorMessage = () => {\n      if (message ) {\n        setMessage(null);\n        dispatch(userClearResponse());\n      }\n    };\n    window.addEventListener('click', clearErrorMessage);\n    return () => {\n      window.removeEventListener('click', clearErrorMessage);\n    };\n  }, [message]);\n  return (\n    <div className={styles.forgotPasswordForm} data-testid=\"RecoveryPasswordForm\">\n      <div className={styles.forgotPasswordForm__titleBlock}>\n        <p>\n          recover password\n        </p>\n        <p>\n          Please enter your e-mail address:\n        </p>\n      </div>\n      {message ?\n        <div className={(message.code !== 200) ? styles.forgotPasswordForm__errorMessagesBlock : styles.forgotPasswordForm__successMessagesBlock}>\n          <p>{transformErrorMessage[message.message]}</p>\n        </div> : null}\n      <form\n        className={styles.forgotPasswordForm__form}\n        onSubmit={formik.handleSubmit}\n      >\n        <TextField\n          label='Email'\n          name='email'\n          placeholder={'example@ex.com'}\n          value={formik.values.email.toLowerCase()}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.errors.email}\n          touched={formik.touched}\n        />\n        <button\n          className={styles.forgotPasswordForm__button}\n          type='submit'\n          disabled={!formik.isValid || !formik.dirty}\n        >{\n          isLoaderRun ?\n            <LoaderIconSmall/> :\n          <span>\n            recover\n          </span>\n          }\n        </button>\n      </form>\n      <p className={styles.forgotPasswordForm__backToSignIn}>\n        Do you remember your password?&nbsp;\n        <NavLink\n          to=\"/signIn\"\n          title='go to sign in page'\n          aria-label='go to sign in page'\n          className={styles.forgotPasswordForm__backToSignInLink}\n        >\n          <span>Back to sign in</span>\n        </NavLink>\n      </p>\n    </div>\n  );\n};\n\nexport default RecoveryPasswordForm;\n"],"names":["RecoveryPasswordForm","dispatch","useDispatch","isLoading","useSelector","getUserLoadingStatus","response","getResponse","error","getError","message","setMessage","useState","isLoaderRun","setIsLoaderRun","formik","useFormik","initialValues","email","validationSchema","validationSchemaEmail","onSubmit","values","isValid","recoveryUserPassword","payload","setFieldValue","setFieldTouched","useEffect","clearErrorMessage","userClearResponse","window","addEventListener","removeEventListener","_jsxs","className","styles","forgotPasswordForm","children","forgotPasswordForm__titleBlock","_jsx","code","forgotPasswordForm__errorMessagesBlock","forgotPasswordForm__successMessagesBlock","transformErrorMessage","forgotPasswordForm__form","handleSubmit","TextField","label","name","placeholder","value","toLowerCase","onChange","handleChange","onBlur","handleBlur","errors","touched","forgotPasswordForm__button","type","disabled","dirty","LoaderIconSmall","forgotPasswordForm__backToSignIn","NavLink","to","title","forgotPasswordForm__backToSignInLink"],"sourceRoot":""}