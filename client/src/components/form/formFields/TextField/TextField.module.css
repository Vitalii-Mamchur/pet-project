.textField {
  display: flex;
  width: 100%;
  flex-direction: column;
  align-items: flex-start;
  gap: 0.8rem;
}

.label {
  display: flex;
  align-items: center;
  gap: 0.4rem;
  align-self: stretch;
  color: #030a07;
  font-size: 16px;
  line-height: 140%;
}
.label span {
  color: #ea001b;
}

.inputBlock {
  display: flex;
  height: 4.8rem;
  padding: 1.4rem;
  justify-content: flex-end;
  align-items: center;
  gap: 1rem;
  align-self: stretch;
  border: 1px solid #727272;
  background: #fafafa;
}
.inputBlock input {
  width: 100%;
  border: none;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  flex: 1 0 0;
  align-self: stretch;
  background: #fafafa;
  font-size: 16px;
  line-height: 140%;
}
.inputBlock input[type=password]::placeholder {
  padding-top: 2rem;
  -webkit-text-security: disc;
}
.inputBlock button {
  background: #fafafa;
  color: #5d5d5d;
}

.error {
  color: #ea001b;
  padding-left: 0.8rem;
  font-size: 1.6rem;
  font-style: normal;
  font-weight: 400;
  line-height: normal;
}

.block {
  display: inline;
}

.textField.hasError .label {
  color: #ea001b;
}
.textField.hasError .inputBlock {
  border-color: #ea001b;
}
.textField.hasError .inputBlock input,
.textField.hasError .inputBlock .clearButton {
  color: #ea001b;
}
.textField.hasError .inputBlock input svg path,
.textField.hasError .inputBlock .clearButton svg path {
  stroke: #ea001b;
}
.textField.hasError .inputBlock button div svg path {
  stroke: #ea001b;
}
.textField.hasError .inputBlock input::placeholder {
  color: #ea001b;
}

.textField.hasError[type=password] .inputBlock button div svg path {
  stroke: #ea001b;
}

/*# sourceMappingURL=TextField.module.css.map */
